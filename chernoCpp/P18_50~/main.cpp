#include "pch.h"

#define LOG(x) std::cout<<x<<std::endl

int main()
{
	//以下建议看视频 p70~,我不会记了
	LOG("part50:条件与断点");
	{
		int x = 10;
		//除了设置断点,你可以设置断点触发时的内存满足条件,还有断点触发后的行为比如打印点什么(动作断点)
		//断点行为可以做了后停下来,也可以边继续运行程序边做
		std::cin.get();
		int y = 2;
		//这样你不需要停止程序就可以查看信息了(有些信息只有运行时才会被记录)
		//这样满足条件再触发断点,也可以帮助你跳到出问题的地方debug
	}
	LOG("part51:现代c++安全");
	{
		//cherno:smart point !用! 小程序就原始指针吧 
	}
	LOG("part52:预编译头文件");
	{
		//pch

		//你告诉它抓取一堆头文件 提前编译出二进制 只编译一次 用它代替一堆要引用的头文件,省去编译头文件
		//这会让你的大项目编译器来快很多,不然的话你更改任何代码它都会重新全都编译一遍!!

		//它主要用于不是你的代码 , 即外部依赖

		//但是多个头文件打包可能会让你模糊cpp到底用到了哪些库
		//一些不常用的库,你可能并不需要放进去
		//cherno:smart point !用! 小程序就原始指针吧 


		//如果你有了 一个 name.h 就需要 一个 引用name.h 的name.cpp
	}
}