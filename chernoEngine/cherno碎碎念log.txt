P24:刚刚意识到cherno要做一个抽象renderer,用多种图形库实现,体量似乎瞬间变大了,先用gl,其他以后(挖坑)
renderAPI -> renderer ->base render what we want

P25: 解决 exe 引用 dll引用的lib中的函数的链接错误 
1-> 令其 __declsplac(dllexport) /__declsplac(dllimport)  
(需要该函数在dll使用过,这样dll才包含该函数的实现二进制命令，lib中dll没调用过的部分会被dll丢弃，即使dll包含了，也需要设置该函数在dll中暴露才行)
2-> module definition file , .def文件    不必使用过,需要在该文件中定义哪些函数(写的是函数签名)从模块中导入

dll可以做 热更新 但是cherno想换lib了 .....

p30?? : cherno 觉得换个图形api就要重新编译太麻烦,也许他想要的是像blender那样瞬间切换的渲染组件??
	不同渲染平台api对应不同dll然后切换使用哪个即可,它不需要你在编译前做出选择,只要再写shader时注明使用api,hazel将会自动使用对应的dll来构建它

p?? : 需要 场景层面的统一调度 渲染命令,渲染命令序列 以及 渲染器对应的 接口

P36? :轮询和Onevent 不一样... 轮询按帧读取你的按键是否按下,刷新频率是每帧,Onevent则是响应事件，对于按键长按有延迟且占用的帧数更多

cherno 认为 material 需要有意义,在里面设置个 光线方向的统一变量就莫名其妙了
可能还得有个basicMaterial?
:
Hazel::Materialref* material = new Hazel::Material(Shader);
Hazel::MaterialInstanceRef* mi = new Hazel::MaterialInstance(Shader);
mi->set("uniform",data);
squareMesh->Setmaterial(mi);//以及渲染序列与批渲染
//构建数据存储区

p46: cherno说 单间一个2Drenderer .....=_=

p52:cherno觉得Set比upload更高级..可能有多重封装啥的...,upload就是一个api,就简单的提交到Gpu动作的一层封装

p55;通用shader/组件shader.... , 像blender那样就很不粗 . . .深度概念gl自带了....没意思

p59: 2020 cherno : 我们将有一个脚本环境, 一个批渲染..坏消息是,,,公共分支的hazel可能只有renderer2D了

p61: 从设置uniform到编辑顶点buffer进行批渲染